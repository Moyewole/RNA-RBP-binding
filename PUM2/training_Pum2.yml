ops: [train, evaluate]
model: {
    # TODO: update this line with the absolute path to the file.
    path: /home/mo/Downloads/deeper.py,
    class: DeeperDeepSEA,
    class_args: {
        sequence_length: 50,
        n_targets: 1,
    },
    non_strand_specific: mean
}
sampler: !obj:selene_sdk.samplers.IntervalsSampler {
    reference_sequence: !obj:selene_sdk.sequences.Genome {
        # we include relative paths here, but we recommend using absolute
        # paths for future configuration files
        input_path: /home/mo/Downloads/GRCh38.primary_assembly.genome.fa
    },
    features: !obj:selene_sdk.utils.load_features_list {
        input_path: /home/mo/Downloads/PUM2/distinct_features.txt
    },
    target_path: /home/mo/Downloads/PUM2/sorted_PUM2.bed.gz,
    intervals_path: /home/mo/Downloads/PUM2/interval.txt,
    seed: 144,
    # A positive example is an 1000bp sequence with at least 1 class/feature annotated to it.
    # A negative sample has no classes/features annotated to the sequence.
    sample_negative: True,
    sequence_length: 50,
    center_bin_to_predict: 50,
    test_holdout: [chr8, chr9],
    validation_holdout: [chr6, chr7],
    # The feature must take up 50% of the bin (200bp) for it to be considered
    # a feature annotated to that sequence.
    feature_thresholds: 0.5,
    mode: train,
    save_datasets: [validate, test]
}
train_model: !obj:selene_sdk.TrainModel {
    batch_size: 64,
    max_steps: 20000,  # update this value for longer training
    report_stats_every_n_steps: 100,
    n_validation_samples: 5000,
    n_test_samples: 2000,
    cpu_n_threads: 32,
    use_cuda: True,  # TODO: update this if CUDA is not on your machine
    data_parallel: True
}
random_seed: 1447
output_dir: ./PUM2/training_outputs
create_subdirectory: False
lr: 0.05
load_test_set: False
...